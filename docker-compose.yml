version: '3'

services:
  # client:
    # TODO

  db:
    image: application_tracker_db:v1
    # image: postgres:latest
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    ports:
      - 5433:5432
    volumes:
      - nfs_mount_db_init:/docker-entrypoint-initdb.d
      - nfs_mount_db_data:/var/lib/postgresql/data
      # - ./db/data/:/var/lib/postgresql/data/
      # - ./db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  # TODO
  api:
    image: application_tracker_go:v1
    # build: ./server
    environment:
      - ENVIRONMENT=prod
      - GIN_MODE=release
      - HOST=${HOST}
      - PORT=${PORT}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    expose:
      - 3030
    ports:
      - 3030:3030
    volumes:
      - ./server:/app
    depends_on:
      - db
    links:
      - db

volumes:
  nfs_mount_db_init:
    driver: local
    driver_opts:
      type: nfs
      o: addr=host.docker.internal,rw,nolock,hard,nointr,nfsvers=3
      device: ":./db/docker-entrypoint-initdb.d"
  nfs_mount_db_data:
    driver: local
    driver_opts:
      type: nfs
      o: addr=host.docker.internal,rw
      device: ":./db/data"


# template from another app:
  # website:
  #   build: ./apps/website
  #   # image: 985764892725.dkr.ecr.us-east-1.amazonaws.com/website:latest
  #   environment:
  #     environment: ${ENVIRONMENT}
  #   # command: yarn start
  #   # volumes:
  #     # - ./apps/website/:/usr/src/app/
